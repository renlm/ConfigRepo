server:
  port: 7002
  reactive:
    session:
      cookie:
        name: GATEWAY
spring:
  redis:
    clientName: gateway-dev
  session:
    redis:
      namespace: gateway:session
  security:
    oauth2:
      client:
        registration:
          local:
            provider: local
            clientId: local
            clientSecret: secret1
            authorizationGrantType: authorization_code
            redirectUri: '{baseUrl}/login/oauth2/code/{registrationId}'
            scope:
            - openid
            - profile
        provider:
          local:
            authorizationUri: http://127.0.0.1:8080/oauth2/authorize
            tokenUri: http://127.0.0.1:8080/oauth2/token
            jwkSetUri: http://127.0.0.1:8080/oauth2/jwks
            userInfoUri: http://127.0.0.1:8080/userinfo
            userNameAttribute: sub
    resourceserver:
      jwt:
        issuerUri: http://127.0.0.1:8080
        jwkSetUri: http://127.0.0.1:8080/oauth2/jwks
  cloud:
    gateway:
      routes:
      - id: npmmirror
        uri: https://registry.npmmirror.com
        predicates:
        - Path=/npmmirror/**
        filters:
        - StripPrefix=1